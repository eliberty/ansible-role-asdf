---
- name: "get users HOME"
  getent:
    database: passwd
    key: "{{ asdf_user }}"
    split: ":"
  when: asdf_dir is undefined

- name: "set asdf_config_file based on home directory"
  set_fact:
    asdf_config_file: "{{ getent_passwd[asdf_user][4] }}/.asdfrc"
  when: asdf_dir is undefined and asdf_config_file is undefined

- name: "set asdf_default_tool_versions_file based on home directory"
  set_fact:
    asdf_default_tool_versions_file: ".tool-versions"
  when: asdf_dir is undefined and asdf_default_tool_versions_file is undefined

- name: "set asdf_dir variable based on home directory"
  set_fact:
    asdf_dir: "{{ getent_passwd[asdf_user][4] }}/.asdf"
  when: asdf_dir is undefined

- name: "set asdf_config_file variable based on asdf_dir"
  set_fact:
    asdf_config_file: "{{ asdf_dir }}/asdfrc"
  when: asdf_config_file is undefined

- name: "set asdf_default_tool_versions_file variable based on asdf_dir"
  set_fact:
    asdf_default_tool_versions_file: "{{ asdf_dir }}/tool-versions"
  when: asdf_default_tool_versions_file is undefined

- name: "install asdf global dependencies with apt"
  apt:
    name: "{{ asdf_apt_global_dependencies }}"
    install_recommends: no
    cache_valid_time: "{{ apt_cache_valid_time }}"
  become: True
  retries: "{{ remote_package_retries }}"
  register: apt_deps_result
  until: apt_deps_result is succeeded
  when: ansible_os_family == "Debian"

- name: "install asdf global dependencies with yum"
  yum:
    name: "{{ asdf_yum_global_dependencies }}"
  become: True
  retries: "{{ remote_package_retries }}"
  register: yum_deps_result
  until: yum_deps_result is succeeded
  when: ansible_os_family == "RedHat"

- name: "ensure asdf_dir presence and ownership"
  file:
    path: "{{ asdf_dir }}"
    owner: "{{ asdf_user }}"
    group: "{{ asdf_group }}"
    state: directory
  become: True

- name: "install asdf"
  git:
    repo: "https://github.com/asdf-vm/asdf.git"
    dest: "{{ asdf_dir }}"
    version: "{{ asdf_version }}"
  become: True
  become_user: "{{ asdf_user }}"

# Swtich to .bashrc from /etc/profile - https://github.com/markosamuli/ansible-asdf
- name: Set path to .bashrc
  set_fact:
    asdf_bashrc_path: "{{ getent_passwd[asdf_user][4] }}/.bashrc"
  when: asdf_bashrc_path is undefined

- name: Check whether .bashrc file exists
  stat:
    path: "{{ asdf_bashrc_path }}"
  register: asdf_bashrc_st

- name: Resolve .bashrc symlink
  set_fact:
    asdf_bashrc_path: "{{ asdf_bashrc_st.stat.lnk_source }}"
  when: asdf_bashrc_st.stat.exists and asdf_bashrc_st.stat.islnk

- name: Load asdf in .bashrc
  blockinfile:
    dest: "{{ asdf_bashrc_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: asdf"
    block: |
      if [ -e "$HOME/.asdf/asdf.sh" ]; then
        source $HOME/.asdf/asdf.sh
        source $HOME/.asdf/completions/asdf.bash
      fi
  when: asdf_bashrc_st.stat.exists
